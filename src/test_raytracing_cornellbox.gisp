(def sw (* 256 2))
(def sh (* 256 2))
(def spp (* 128 8))
(def name "output_raytracer_gisp_TESTOPENCL.png")

;;Define scene
(def scene  (make-group3D))
(def lights (make-group3D))

;;Define materials
(def metal (make-material-metal 0.8 0.85 0.88 0.1))
(def glass (make-material-dielectric 1.5))
(def red (make-material-lambertian 0.65 0.05 0.05))
(def whi (make-material-lambertian 0.73 0.73 0.73))
(def gre (make-material-lambertian 0.12 0.45 0.15))
(def lig (make-material-light 15 15 15))

;;Make cornel box
(add-to-group3D scene (rect3D [  0   0   0] [  0 555 555] gre))
(add-to-group3D scene (rect3D [555   0   0] [555 555 555] red))
(def light (rect3D [213 554 277] [343 554 332] lig))
(def fliplight (flip-face light))
(add-to-group3D  scene fliplight)
(add-to-group3D lights light)
(add-to-group3D scene (rect3D [0    0    0] [555   0 555] whi))
(add-to-group3D scene (rect3D [0  555    0] [555 555 555] whi))
(add-to-group3D scene (rect3D [0    0  555] [555 555 555] whi))

;;Add objects
(add-to-group3D scene (translated3D (rotated3D (box3D [0 0 0] [165 330 165] metal) 15 1) [265 0 295]))
(def testsphere (sphere3D [190 190 190] 90 glass))
(add-to-group3D scene testsphere)
(add-to-group3D lights testsphere)

;;Render
(def camera (camera3D [278 278 -800] [278 278 0] 40 10 0))
(render3D name sw sh spp scene lights camera)

nil
